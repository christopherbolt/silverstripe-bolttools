// This file should contain all your site's mixins

/// @require $breakpoints
@mixin above($breakpoint) {
    // If the key exists in the map
    @if map-has-key($breakpoints, $breakpoint) {
        // Prints a media query based on the value
        @media (min-width: map-get($breakpoints, $breakpoint)) {
            @content;
        }
    }
    // If the key doesn't exist in the map
    @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
    }
}

@mixin below($breakpoint) {
    // If the key exists in the map
    @if map-has-key($breakpoints, $breakpoint) {
        // Prints a media query based on the value
        @media (max-width: map-get($breakpoints, $breakpoint)) {
            @content;
        }
    }
    // If the key doesn't exist in the map
    @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
    }
}

@mixin between($breakpoint1, $breakpoint2) {
    // If the key exists in the map
    @if map-has-key($breakpoints, $breakpoint1) and map-has-key($breakpoints, $breakpoint2) {
        // Prints a media query based on the value
        @media (min-width: map-get($breakpoints, $breakpoint1)) and (max-width: map-get($breakpoints, $breakpoint2)) {
            @content;
        }
    }
    // If the key doesn't exist in the map
    @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint1}` or `#{$breakpoint2}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
    }
}

@mixin retina() {
	@media (-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 124.8dpi), (min-resolution: 1.3dppx) {
		@content;
	}
}

@mixin touch() {
	@media (hover: none) {
		@content;
	}
}

@mixin not-touch() {
	@media (hover: hover) and (pointer: fine) {
		@content;
	}
}

@mixin responsive-font-sizes {
	font-size: $font-size-small;
	@include above('medium') {
		font-size: $font-size-medium;	
	}
	@include above('large') {
		font-size: $font-size-large;
	}	
}

@mixin sprite($width:53px) {
	background-image: url(../images/sprite.png);
	background-repeat: no-repeat;
	background-size: $width auto;
	@include retina {
		background-image: url(../images/sprite-retina.png);
	}	
}

// Common mixins, probably don't need to change these -----------

@mixin no-list {
	margin: 0;
	padding: 0;
	list-style: none;
	& > li {
		list-style: none;
	}
}

@mixin clear-fix {
	&:after {
		content: '';
		display: block;
		clear: both;	
	}
}

/// Vertically centers the element inside of its first non-static parent,
/// @link http://www.sitepoint.com/centering-with-sass/ Centering With Sass
@mixin vertical-center {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

/// Horizontally centers the element inside of its first non-static parent,
/// @link http://www.sitepoint.com/centering-with-sass/ Centering With Sass
@mixin horizontal-center {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

/// Absolutely centers the element inside of its first non-static parent,
/// @link http://www.sitepoint.com/centering-with-sass/ Centering With Sass
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
